/* Generated By:JavaCC: Do not edit this line. Linguagem20191Constants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Linguagem20191Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMENTARY = 5;
  /** RegularExpression Id. */
  int OPEN_COMENTARY = 6;
  /** RegularExpression Id. */
  int CLOSED_COMENTARY = 7;
  /** RegularExpression Id. */
  int DOT = 8;
  /** RegularExpression Id. */
  int COMMA = 9;
  /** RegularExpression Id. */
  int OPEN_CURLY_BRACKET = 10;
  /** RegularExpression Id. */
  int CLOSED_CURLY_BRACKET = 11;
  /** RegularExpression Id. */
  int OPEN_PARENTHESE = 12;
  /** RegularExpression Id. */
  int CLOSED_PARENTHESE = 13;
  /** RegularExpression Id. */
  int PLUS = 14;
  /** RegularExpression Id. */
  int MINUS = 15;
  /** RegularExpression Id. */
  int DIVISION_REST = 16;
  /** RegularExpression Id. */
  int EXACT_DIVISION = 17;
  /** RegularExpression Id. */
  int POW = 18;
  /** RegularExpression Id. */
  int MULTIPLY = 19;
  /** RegularExpression Id. */
  int DIVIDE = 20;
  /** RegularExpression Id. */
  int EQUAL = 21;
  /** RegularExpression Id. */
  int DIFFERENT = 22;
  /** RegularExpression Id. */
  int MORE_EQUAL = 23;
  /** RegularExpression Id. */
  int LESS_EQUAL = 24;
  /** RegularExpression Id. */
  int MORE_ = 25;
  /** RegularExpression Id. */
  int LESS = 26;
  /** RegularExpression Id. */
  int AND = 27;
  /** RegularExpression Id. */
  int OR = 28;
  /** RegularExpression Id. */
  int NOT = 29;
  /** RegularExpression Id. */
  int NATURAL = 30;
  /** RegularExpression Id. */
  int REAL = 31;
  /** RegularExpression Id. */
  int CHAR = 32;
  /** RegularExpression Id. */
  int BOOLEAN = 33;
  /** RegularExpression Id. */
  int PROGRAM = 34;
  /** RegularExpression Id. */
  int DEFINE = 35;
  /** RegularExpression Id. */
  int _NOT = 36;
  /** RegularExpression Id. */
  int VARIABLE = 37;
  /** RegularExpression Id. */
  int IS = 38;
  /** RegularExpression Id. */
  int EXECUTE = 39;
  /** RegularExpression Id. */
  int SET = 40;
  /** RegularExpression Id. */
  int TO = 41;
  /** RegularExpression Id. */
  int GET = 42;
  /** RegularExpression Id. */
  int PUT = 43;
  /** RegularExpression Id. */
  int VERIFY = 44;
  /** RegularExpression Id. */
  int _TRUE = 45;
  /** RegularExpression Id. */
  int _FALSE = 46;
  /** RegularExpression Id. */
  int LOOP = 47;
  /** RegularExpression Id. */
  int WHILE = 48;
  /** RegularExpression Id. */
  int INTEGER_CONSTANT = 49;
  /** RegularExpression Id. */
  int REAL_CONSTANT = 50;
  /** RegularExpression Id. */
  int DIGIT = 51;
  /** RegularExpression Id. */
  int LOGIC_CONSTANT = 52;
  /** RegularExpression Id. */
  int IDENTIFIER = 53;
  /** RegularExpression Id. */
  int LITERAL_CONSTANT = 54;
  /** RegularExpression Id. */
  int LETTER = 55;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\":-\"",
    "\"/*\"",
    "\"*/\"",
    "\".\"",
    "\",\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"+\"",
    "\"-\"",
    "\"%%\"",
    "\"%\"",
    "\"**\"",
    "\"*\"",
    "\"/\"",
    "\"==\"",
    "\"!=\"",
    "\">=\"",
    "\"<=\"",
    "\">\"",
    "\"<\"",
    "\"&\"",
    "\"|\"",
    "\"!\"",
    "\"natural\"",
    "\"real\"",
    "\"char\"",
    "\"boolean\"",
    "\"program\"",
    "\"define\"",
    "\"not\"",
    "\"variable\"",
    "\"is\"",
    "\"execute\"",
    "\"set\"",
    "\"to\"",
    "\"get\"",
    "\"put\"",
    "\"verify\"",
    "\"true\"",
    "\"false\"",
    "\"loop\"",
    "\"while\"",
    "<INTEGER_CONSTANT>",
    "<REAL_CONSTANT>",
    "<DIGIT>",
    "<LOGIC_CONSTANT>",
    "<IDENTIFIER>",
    "<LITERAL_CONSTANT>",
    "<LETTER>",
  };

}
